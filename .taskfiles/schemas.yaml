---
version: "3"

tasks:
  generate:
    cmds:
      - task: ent
      - task: proto

  # help:
  #   desc: Show help
  #   cmds:
  #     - task --list-all
  #   silent: true

  # build:
  #   desc: Build the project
  #   cmds:
  #     - task: refresh-deps
  #     - go build -o {{.BIN_NAME}} {{.BIN_FILES}}
  #   sources:
  #     - "{{.BIN_FILES}}/*.go"
  #   generates:
  #     - "{{.BIN_NAME}}"
  #   vars:
  #     BIN_NAME: "./bot"
  #     BIN_FILES: "./bot"

  # run:
  #   desc: Run the project
  #   cmds:
  #     - task: build
  #     - ./{{.BIN_NAME}}
  #   vars:
  #     BIN_NAME: "./bot"

  # test:
  #   desc: Run the tests
  #   cmds:
  #     - task: refresh-deps
  #     - go test -v ./...
  #   vars:
  #     BIN_NAME: "./bot"
  #     BIN_FILES: "./bot"

  # clean:
  #   desc: Clean the project
  refresh-deps:
    desc: Get Project Dependencies
    cmds:
      # go mod download is a side effect of go get
      - go get -v -d ./...
  ent:
    desc: Generate entgo files
    cmds:
      - task: refresh-deps
      - go generate {{.ENT_FILES}}
    sources:
      - "{{.ENT_FILES}}/generate.go"
      - "{{.ENT_FILES}}/schemas"
    generates:
      - "{{.ENT_FILES}}/[!schemas]*"
    vars:
      ENT_FILES: "./ent"

  proto:
    desc: Generate proto files
    sources:
      - "{{.PROTO_FILES}}/*.proto"
    cmds:
      - task: refresh-deps
      - protoc --go_out=. --go-grpc_out=. --go_opt=paths=import --go-grpc_opt=paths=import {{.PROTO_FILES}}/*.proto
      - for: sources
        cmd: protoc --plugin={{.WEB_DIR}}/node_modules/.bin/protoc-gen-ts.cmd --ts_opt='target=node,runtime_package=npm:google-protobuf' --ts_out='import_style=module,bin:{{.WEB_DIR}}/src/lib/grpc' --proto_path={{.PROTO_FILES}} {{toSlash .ITEM}}
    generates:
      - "bot/servers/*pb.go"
      - "web/src/lib/grpc/*.ts"
    vars:
      PROTO_FILES: "./proto"
      GO_PACKAGE: "./bot/servers"
      WEB_DIR: "./web"
